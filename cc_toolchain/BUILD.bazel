load("@rules_cc//cc:defs.bzl", "cc_toolchain")
load("//features:cc_toolchain_import.bzl", "cc_toolchain_import")
load(":toolchain_config.bzl", "cc_toolchain_config")

######################################################################
# Tools: Linux x86_64, Sysroot: Linux x86_64
######################################################################

alias(
    name = "startup_libs_lx64",
    actual = "@sysroot_linux_x86_64//:startup_libs",
    visibility = ["//visibility:public"],
)

# buildifier: leave-alone
cc_toolchain_import(
    name = "imports_lx64_lx64",
    deps = [
        "@sysroot_linux_x86_64//:includes_c",
        "@llvm_linux_x86_64//:clang_includes",
        "@sysroot_linux_x86_64//:includes_system",
        "@sysroot_linux_x86_64//:glibc",
        "@sysroot_linux_x86_64//:pthread",
    ],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "all_lx64_lx64",
    srcs = [
        ":imports_lx64_lx64",
        "//cc_toolchain/wrappers:all",
        "//features:startup_libs_lx64",
        "@llvm_linux_x86_64//:all",
    ],
)

filegroup(
    name = "compiler_lx64_lx64",
    srcs = [
        ":imports_lx64_lx64",
        "//cc_toolchain/wrappers:all",
        "@llvm_linux_x86_64//:clang",
        "@llvm_linux_x86_64//:clang++",
    ],
)

filegroup(
    name = "linker_lx64_lx64",
    srcs = [
        ":compiler_lx64_lx64",
        "//cc_toolchain/wrappers:all",
        "@llvm_linux_x86_64//:ld",
        "@sysroot_linux_x86_64//:startup_libs",
    ],
)

filegroup(
    name = "ar_lx64_lx64",
    srcs = [
        "//cc_toolchain/wrappers:all",
        "@llvm_linux_x86_64//:ar",
    ],
)

cc_toolchain(
    name = "toolchain_lx64_lx64",
    all_files = ":all_lx64_lx64",
    ar_files = ":ar_lx64_lx64",
    compiler_files = ":compiler_lx64_lx64",
    dwp_files = ":all_lx64_lx64",
    linker_files = ":linker_lx64_lx64",
    objcopy_files = ":empty",
    strip_files = ":empty",
    supports_param_files = 0,
    toolchain_config = ":toolchain_config_lx64_lx64",
    toolchain_identifier = "toolchain_lx64_lx64_id",
)

cc_toolchain_config(
    name = "toolchain_config_lx64_lx64",
    archiver = "@llvm_linux_x86_64//:ar",
    c_compiler = "@llvm_linux_x86_64//:clang",
    cc_compiler = "@llvm_linux_x86_64//:clang++",
    compiler_features = [
        # Hermetic libraries feature required before import.
        "//features:hermetic_libraries",
        "//features:toolchain_import_lx64_lx64",

        # Toolchain configuration
        "//features:garbage_collect_symbols",
        "//features:warnings",
        "//features:errors",
        "//features:reproducible",
        "//features:language",
        "//features:use_lld",
        "//features:sysroot_linux_x86_64",
        "//features:dbg",
        "//features:opt",
        "//features:fastbuild",
        "//features:position_independent_code",
        "//features:supports_pic",
        "//features:startup_libs_lx64",
        "//features:coverage",

        # C++ standard configuration
        "//features:c++11",
        "//features:c++14",
        "//features:c++17",
    ],
    linker = "@llvm_linux_x86_64//:ld",
    target_cpu = "x86_64",
    target_system_name = "local",
)

toolchain(
    name = "lx64_lx64",
    exec_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
    ],
    target_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
    ],
    toolchain = ":toolchain_lx64_lx64",
    toolchain_type = "@bazel_tools//tools/cpp:toolchain_type",
)

######################################################################
# Tools: Linux x86_64, Sysroot: Linux aarch64
######################################################################

alias(
    name = "startup_libs_la64",
    actual = "@sysroot_linux_aarch64//:startup_libs",
    visibility = ["//visibility:public"],
)

# buildifier: leave-alone
cc_toolchain_import(
    name = "imports_lx64_la64",
    deps = [
        "@sysroot_linux_aarch64//:includes_c",
        "@llvm_linux_x86_64//:clang_includes",
        "@sysroot_linux_aarch64//:includes_system",
        "@sysroot_linux_aarch64//:glibc",
        "@sysroot_linux_aarch64//:pthread",
    ],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "all_lx64_la64",
    srcs = [
        ":imports_lx64_la64",
        "//cc_toolchain/wrappers:all",
        "//features:startup_libs_la64",
        "@llvm_linux_x86_64//:all",
    ],
)

filegroup(
    name = "compiler_lx64_la64",
    srcs = [
        ":all_lx64_la64",
        "//cc_toolchain/wrappers:all",
        "@llvm_linux_x86_64//:clang",
        "@llvm_linux_x86_64//:clang++",
    ],
)

filegroup(
    name = "linker_lx64_la64",
    srcs = [
        ":compiler_lx64_la64",
        "//cc_toolchain/wrappers:all",
        "@llvm_linux_x86_64//:ld",
        "@sysroot_linux_aarch64//:startup_libs",
    ],
)

filegroup(
    name = "ar_lx64_la64",
    srcs = [
        "//cc_toolchain/wrappers:all",
        "@llvm_linux_x86_64//:ar",
    ],
)

cc_toolchain(
    name = "toolchain_lx64_la64",
    all_files = ":all_lx64_la64",
    ar_files = ":ar_lx64_la64",
    compiler_files = ":compiler_lx64_la64",
    dwp_files = ":all_lx64_la64",
    linker_files = ":linker_lx64_la64",
    objcopy_files = ":empty",
    strip_files = ":empty",
    supports_param_files = 0,
    toolchain_config = ":toolchain_config_lx64_la64",
    toolchain_identifier = "toolchain_id_lx64_la64",
)

cc_toolchain_config(
    name = "toolchain_config_lx64_la64",
    archiver = "@llvm_linux_x86_64//:ar",
    c_compiler = "@llvm_linux_x86_64//:clang",
    cc_compiler = "@llvm_linux_x86_64//:clang++",
    compiler_features = [
        # Hermetic libraries feature required before import.
        "//features:hermetic_libraries",
        "//features:toolchain_import_lx64_la64",

        # Toolchain configuration
        "//features:garbage_collect_symbols",
        "//features:warnings",
        "//features:errors",
        "//features:reproducible",
        "//features:language",
        "//features:use_lld",
        "//features:sysroot_linux_aarch64",
        "//features:dbg",
        "//features:opt",
        "//features:fastbuild",
        "//features:position_independent_code",
        "//features:supports_pic",
        "//features:startup_libs_la64",
        "//features:coverage",

        # C++ standard configuration
        "//features:c++11",
        "//features:c++14",
        "//features:c++17",
    ],
    linker = "@llvm_linux_x86_64//:ld",
    target_cpu = "aarch64",
    target_system_name = "local",
)

# buildifier: leave-alone
toolchain(
    name = "lx64_la64",
    exec_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
    ],
    target_compatible_with = [
        "@platforms//cpu:aarch64",
        "@platforms//os:linux",
    ],
    toolchain = ":toolchain_lx64_la64",
    toolchain_type = "@bazel_tools//tools/cpp:toolchain_type",
)

######################################################################
# Tools: Linux x86_64, Sysroot: macOS aarch64
######################################################################
cc_toolchain(
    name = "macos_arm64_toolchain",
    all_files = ":all",
    ar_files = ":ar_files",
    compiler_files = ":compiler_files",
    dwp_files = ":all",
    linker_files = ":linker_files",
    objcopy_files = ":empty",
    strip_files = ":empty",
    supports_param_files = 0,
    toolchain_config = ":macos_arm64_toolchain_config",
    toolchain_identifier = "macos_arm64_toolchain_id",
)

cc_toolchain_config(
    name = "macos_arm64_toolchain_config",
    archiver = "@llvm_linux_x86_64//:ar",
    c_compiler = "@llvm_linux_x86_64//:clang",
    cc_compiler = "@llvm_linux_x86_64//:clang++",
    compiler_features = [
        # Hermetic libraries feature required before import.
        "//features:hermetic_libraries",
        "//features:toolchain_import",

        # Toolchain configuration
        #"//features:garbage_collect_symbols",      # error: ld64.lld: error: unknown argument '--gc-sections'
        "//features:warnings",
        "//features:errors",
        "//features:reproducible",
        "//features:language",
        "//features:use_lld",
        "//features:sysroot_macos_arm64",
        "//features:dbg",
        "//features:opt",
        "//features:fastbuild",
        "//features:position_independent_code",
        "//features:supports_pic",
        "//features:startup_libs",
        "//features:coverage",

        # C++ standard configuration
        "//features:c++11",
        "//features:c++14",
        "//features:c++17",
    ],
    linker = "@llvm_linux_x86_64//:ld",
    target_cpu = "aarch64",
    target_system_name = "local",
)
