load("@rules_cc//cc:defs.bzl", "cc_toolchain")
load(":toolchain_config.bzl", "cc_toolchain_config")
load("//features:feature_import.bzl", "feature_import")
#load("@bazel_skylib//:bzl_library.bzl", "bzl_library")

feature_import(
    name = "all_imports",
    visibility = ["//visibility:public"],
    deps = [
        # buildifier don't sort, allow user to override system libs. 
        # System libs will be found first as the include paths are found.
        "//config:libc",
        "//config:libc++",
        "//config:libc++abi",
        "//config:llvm_clang",
        "//config:libunwind",
    ],

)

filegroup(
    name = "all",
    srcs = [
        ":all_imports",
        "//features:startup_libs", 
        "//cc_toolchain/wrappers:all",
        "@llvm18_linux_x86_64//:all",
    ],
)

filegroup(
    name = "compiler_files",
    srcs = [
        ":all_imports",
        "//cc_toolchain/wrappers:all",
        "@llvm18_linux_x86_64//:compiler_files",
    ],
)

filegroup(
    name = "linker_files",
    srcs = [
        ":compiler_files",
        "//features:startup_libs",
        "//cc_toolchain/wrappers:all",
        "@llvm18_linux_x86_64//:linker_files",
    ],
)

cc_toolchain(
    name = "linux_x86_64_toolchain",
    toolchain_identifier = "linux_x86_64_toolchain",
    all_files = ":all",
    ar_files = ":empty",
    compiler_files = ":compiler_files",
    dwp_files = ":all",
    linker_files = ":linker_files",
    objcopy_files = ":empty",
    strip_files = ":empty",
    supports_param_files = 0,
    toolchain_config = ":linux_x86_64_toolchain_config",
)

cc_toolchain_config(
    name = "linux_x86_64_toolchain_config",
    c_compiler = "@llvm18_linux_x86_64//:bin/clang",
    cc_compiler = "@llvm18_linux_x86_64//:bin/clang++",
    linker = "@llvm18_linux_x86_64//:bin/ld.lld",
    compiler_features = [
        # Hermetic libraries feature required before import.
        "//features:hermetic_libraries",
        "//features:toolchain_import",

        # Toolchain configuration
        "//features:garbage_collect_symbols",
        "//features:warnings",
        "//features:errors",
        "//features:reproducible",
        "//features:language",
        "//features:use_lld",
        "//features:sysroot",
        "//features:dbg",
        "//features:opt",
        "//features:fastbuild",
        "//features:position_independent_code",
        "//features:supports_pic",
        "//features:startup_libs",
        "//features:coverage",

        # C++ standard configuration
        "//features:c++11",
        "//features:c++14",
        "//features:c++17",
        "//features:c++20",
    ],
)

toolchain(
    name = "linux_x86_64_cc_toolchain",
    exec_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
    ],
    target_compatible_with = [
        "@platforms//cpu:x86_64",
        "@platforms//os:linux",
    ],
    toolchain = ":linux_x86_64_toolchain",
    toolchain_type = "@rules_cc//cc:toolchain_type",
)
